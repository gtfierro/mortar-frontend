// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mortar.proto

package mdalgrpc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type QualifyRequest struct {
	// all of these queries must return a response for the site to be considered
	// qualified
	Requiredqueries []*QueryRequest `protobuf:"bytes,1,rep,name=requiredqueries,proto3" json:"requiredqueries,omitempty"`
	// only one of these needs to return a response for the site to be
	// considered qualified
	Optionalqueries      []*QueryRequest `protobuf:"bytes,2,rep,name=optionalqueries,proto3" json:"optionalqueries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *QualifyRequest) Reset()         { *m = QualifyRequest{} }
func (m *QualifyRequest) String() string { return proto.CompactTextString(m) }
func (*QualifyRequest) ProtoMessage()    {}
func (*QualifyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d43959f7c3049fd, []int{0}
}
func (m *QualifyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QualifyRequest.Unmarshal(m, b)
}
func (m *QualifyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QualifyRequest.Marshal(b, m, deterministic)
}
func (m *QualifyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QualifyRequest.Merge(m, src)
}
func (m *QualifyRequest) XXX_Size() int {
	return xxx_messageInfo_QualifyRequest.Size(m)
}
func (m *QualifyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QualifyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QualifyRequest proto.InternalMessageInfo

func (m *QualifyRequest) GetRequiredqueries() []*QueryRequest {
	if m != nil {
		return m.Requiredqueries
	}
	return nil
}

func (m *QualifyRequest) GetOptionalqueries() []*QueryRequest {
	if m != nil {
		return m.Optionalqueries
	}
	return nil
}

type QualifyResponse struct {
	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// list of sitenames
	Sites                []string `protobuf:"bytes,2,rep,name=sites,proto3" json:"sites,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QualifyResponse) Reset()         { *m = QualifyResponse{} }
func (m *QualifyResponse) String() string { return proto.CompactTextString(m) }
func (*QualifyResponse) ProtoMessage()    {}
func (*QualifyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d43959f7c3049fd, []int{1}
}
func (m *QualifyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QualifyResponse.Unmarshal(m, b)
}
func (m *QualifyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QualifyResponse.Marshal(b, m, deterministic)
}
func (m *QualifyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QualifyResponse.Merge(m, src)
}
func (m *QualifyResponse) XXX_Size() int {
	return xxx_messageInfo_QualifyResponse.Size(m)
}
func (m *QualifyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QualifyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QualifyResponse proto.InternalMessageInfo

func (m *QualifyResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *QualifyResponse) GetSites() []string {
	if m != nil {
		return m.Sites
	}
	return nil
}

type FetchRequest struct {
	Request              *DataQueryRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FetchRequest) Reset()         { *m = FetchRequest{} }
func (m *FetchRequest) String() string { return proto.CompactTextString(m) }
func (*FetchRequest) ProtoMessage()    {}
func (*FetchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d43959f7c3049fd, []int{2}
}
func (m *FetchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchRequest.Unmarshal(m, b)
}
func (m *FetchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchRequest.Marshal(b, m, deterministic)
}
func (m *FetchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchRequest.Merge(m, src)
}
func (m *FetchRequest) XXX_Size() int {
	return xxx_messageInfo_FetchRequest.Size(m)
}
func (m *FetchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchRequest proto.InternalMessageInfo

func (m *FetchRequest) GetRequest() *DataQueryRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

type FetchResponse struct {
	Error                string             `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Response             *DataQueryResponse `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *FetchResponse) Reset()         { *m = FetchResponse{} }
func (m *FetchResponse) String() string { return proto.CompactTextString(m) }
func (*FetchResponse) ProtoMessage()    {}
func (*FetchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d43959f7c3049fd, []int{3}
}
func (m *FetchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchResponse.Unmarshal(m, b)
}
func (m *FetchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchResponse.Marshal(b, m, deterministic)
}
func (m *FetchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchResponse.Merge(m, src)
}
func (m *FetchResponse) XXX_Size() int {
	return xxx_messageInfo_FetchResponse.Size(m)
}
func (m *FetchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchResponse proto.InternalMessageInfo

func (m *FetchResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *FetchResponse) GetResponse() *DataQueryResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

func init() {
	proto.RegisterType((*QualifyRequest)(nil), "mdalgrpc.QualifyRequest")
	proto.RegisterType((*QualifyResponse)(nil), "mdalgrpc.QualifyResponse")
	proto.RegisterType((*FetchRequest)(nil), "mdalgrpc.FetchRequest")
	proto.RegisterType((*FetchResponse)(nil), "mdalgrpc.FetchResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MortarClient is the client API for Mortar service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MortarClient interface {
	// returns list of sites that match the qualification filter
	Qualify(ctx context.Context, in *QualifyRequest, opts ...grpc.CallOption) (*QualifyResponse, error)
	Fetch(ctx context.Context, in *FetchRequest, opts ...grpc.CallOption) (*FetchResponse, error)
}

type mortarClient struct {
	cc *grpc.ClientConn
}

func NewMortarClient(cc *grpc.ClientConn) MortarClient {
	return &mortarClient{cc}
}

func (c *mortarClient) Qualify(ctx context.Context, in *QualifyRequest, opts ...grpc.CallOption) (*QualifyResponse, error) {
	out := new(QualifyResponse)
	err := c.cc.Invoke(ctx, "/mdalgrpc.Mortar/Qualify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mortarClient) Fetch(ctx context.Context, in *FetchRequest, opts ...grpc.CallOption) (*FetchResponse, error) {
	out := new(FetchResponse)
	err := c.cc.Invoke(ctx, "/mdalgrpc.Mortar/Fetch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MortarServer is the server API for Mortar service.
type MortarServer interface {
	// returns list of sites that match the qualification filter
	Qualify(context.Context, *QualifyRequest) (*QualifyResponse, error)
	Fetch(context.Context, *FetchRequest) (*FetchResponse, error)
}

func RegisterMortarServer(s *grpc.Server, srv MortarServer) {
	s.RegisterService(&_Mortar_serviceDesc, srv)
}

func _Mortar_Qualify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QualifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MortarServer).Qualify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mdalgrpc.Mortar/Qualify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MortarServer).Qualify(ctx, req.(*QualifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mortar_Fetch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MortarServer).Fetch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mdalgrpc.Mortar/Fetch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MortarServer).Fetch(ctx, req.(*FetchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Mortar_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mdalgrpc.Mortar",
	HandlerType: (*MortarServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Qualify",
			Handler:    _Mortar_Qualify_Handler,
		},
		{
			MethodName: "Fetch",
			Handler:    _Mortar_Fetch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mortar.proto",
}

func init() { proto.RegisterFile("mortar.proto", fileDescriptor_1d43959f7c3049fd) }

var fileDescriptor_1d43959f7c3049fd = []byte{
	// 346 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x4f, 0x4b, 0xc3, 0x30,
	0x14, 0xc0, 0xc9, 0x64, 0xff, 0xde, 0xa6, 0x93, 0xa0, 0xae, 0x76, 0x0a, 0x23, 0xa7, 0xb1, 0xc3,
	0x8a, 0x53, 0x10, 0x06, 0x82, 0x87, 0xe1, 0xcd, 0xc3, 0x0a, 0x1e, 0x15, 0xe2, 0x96, 0x6d, 0x85,
	0xae, 0x69, 0x5f, 0x53, 0xc1, 0xab, 0x5f, 0x41, 0x3f, 0x8f, 0x5f, 0xc2, 0xaf, 0xe0, 0x07, 0x91,
	0x36, 0xe9, 0xac, 0x73, 0xec, 0x96, 0xbc, 0xfc, 0xf2, 0x7b, 0xef, 0xe5, 0x05, 0x9a, 0x2b, 0x89,
	0x8a, 0xe3, 0x20, 0x44, 0xa9, 0x24, 0xad, 0xad, 0x66, 0xdc, 0x5f, 0x60, 0x38, 0xb5, 0xeb, 0x4b,
	0x39, 0xd3, 0x41, 0x1b, 0xd2, 0xa0, 0x59, 0x9f, 0x2d, 0xa4, 0x5c, 0xf8, 0xc2, 0xe1, 0xa1, 0xe7,
	0xf0, 0x20, 0x90, 0x8a, 0x2b, 0x4f, 0x06, 0xb1, 0x3e, 0x65, 0x1f, 0x04, 0x0e, 0x26, 0x09, 0xf7,
	0xbd, 0xf9, 0xab, 0x2b, 0xa2, 0x44, 0xc4, 0x8a, 0xde, 0x42, 0x0b, 0x45, 0x94, 0x78, 0x28, 0x66,
	0x51, 0x22, 0xd0, 0x13, 0xb1, 0x45, 0xba, 0x7b, 0xbd, 0xc6, 0xf0, 0x64, 0x90, 0xe7, 0x1a, 0x4c,
	0x12, 0x81, 0xf9, 0x05, 0x77, 0x13, 0x4f, 0x0d, 0x32, 0x4c, 0xb3, 0x70, 0x3f, 0x37, 0x94, 0x76,
	0x1b, 0x36, 0x70, 0x76, 0x03, 0xad, 0x75, 0x55, 0x71, 0x28, 0x83, 0x58, 0xd0, 0x23, 0x28, 0x0b,
	0x44, 0x89, 0x16, 0xe9, 0x92, 0x5e, 0xdd, 0xd5, 0x9b, 0x34, 0x1a, 0x7b, 0xca, 0x24, 0xa8, 0xbb,
	0x7a, 0xc3, 0xc6, 0xd0, 0xbc, 0x13, 0x6a, 0xba, 0xcc, 0x5b, 0xba, 0x82, 0x2a, 0xea, 0x65, 0x76,
	0xbb, 0x31, 0xb4, 0x7f, 0x0b, 0x19, 0x73, 0xc5, 0xff, 0x14, 0x93, 0xa3, 0xec, 0x09, 0xf6, 0x8d,
	0x65, 0x67, 0x09, 0xd7, 0x50, 0x43, 0x43, 0x58, 0xa5, 0xcc, 0xde, 0xd9, 0x6a, 0xd7, 0x88, 0xbb,
	0x86, 0x87, 0x9f, 0x04, 0x2a, 0xf7, 0xd9, 0x2c, 0xe9, 0x23, 0x54, 0x4d, 0xbf, 0xd4, 0x2a, 0xbe,
	0x51, 0x71, 0x30, 0xf6, 0xe9, 0x96, 0x13, 0xad, 0x62, 0xe7, 0x6f, 0x5f, 0xdf, 0xef, 0xa5, 0x36,
	0xa3, 0xce, 0xcb, 0x85, 0xa3, 0xff, 0x87, 0x13, 0x69, 0x66, 0x44, 0xfa, 0xf4, 0x01, 0xca, 0x59,
	0x27, 0xb4, 0x30, 0x80, 0xe2, 0x03, 0xd9, 0xed, 0x7f, 0x71, 0x23, 0xee, 0x64, 0xe2, 0x63, 0x76,
	0x58, 0x10, 0xcf, 0x53, 0x62, 0x44, 0xfa, 0xcf, 0x95, 0xec, 0x0f, 0x5d, 0xfe, 0x04, 0x00, 0x00,
	0xff, 0xff, 0xfd, 0x10, 0xfc, 0x0e, 0x92, 0x02, 0x00, 0x00,
}
